From b9948899064fabc5118ee983180009da62a16857 Mon Sep 17 00:00:00 2001
From: Henry Schreiner <henry.fredrick.schreiner@cern.ch>
Date: Wed, 16 Dec 2020 13:47:08 -0500
Subject: [PATCH] fix: avoid hardcoded threads and macOS target (#605)

* fix: avoid hardcoded threads and macOS target

This is broken on conda-forge because it's running out of memory on Travis - you should always be able to build single threaded if you need to!

And I've also avoided overriding the macOS deployment target - most build systems (cibuildwheel, conda-forge, etc) set this and you should avoid overriding that.

See https://github.com/pybind/cmake_example/blob/master/setup.py - this should be similar to that.

* fix: typo
---
 setup.py | 7 +++++--
 1 file changed, 5 insertions(+), 2 deletions(-)

diff --git a/setup.py b/setup.py
index ee8d80a6f..5f42dcb0d 100644
--- a/setup.py
+++ b/setup.py
@@ -49,7 +49,6 @@ def build_extension(self, ext):
             "-DCMAKE_INSTALL_PREFIX={0}".format(extdir),
             "-DPYTHON_EXECUTABLE={0}".format(sys.executable),
             "-DPYBUILD=ON",
-            "-DCMAKE_OSX_DEPLOYMENT_TARGET=10.9",
             "-DPYBUILD=ON",
             "-DBUILD_TESTING=OFF",
         ]
@@ -71,8 +70,12 @@ def build_extension(self, ext):
             cmake_generator = os.environ.get("CMAKE_GENERATOR", "")
             if sys.maxsize > 2**32 and cmake_generator != "NMake Makefiles" and "Win64" not in cmake_generator:
                 cmake_args += ["-A", "x64"]
-        else:
+                
+        elif "CMAKE_BUILD_PARALLEL_LEVEL" not in os.environ:
             build_args += ["-j", str(multiprocessing.cpu_count())]
+            
+        if platform.system() == "Darwin" and "MACOSX_DEPLOYMENT_TARGET" not in os.environ:
+            cmake_args += ["-DCMAKE_OSX_DEPLOYMENT_TARGET=10.9"]
 
         if not os.path.exists(self.build_temp):
              os.makedirs(self.build_temp)
